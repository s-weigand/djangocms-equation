name: 'Tests'
on: [push, pull_request]

jobs:
  misspell:
    name: Check spelling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          reporter: github-pr-review
          github_token: ${{ secrets.github_token }}
          level: warning
          locale: 'US'

  pre-commit:
    name: Run Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install .
          pip install -r requirements_dev.txt
      - name: Build docs
        run: |
          make --directory=docs clean html

  docs-links:
    name: Check Links in docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          pip install -r requirements_dev.txt
      - name: Check doc links
        continue-on-error: true
        run: |
          make --directory=docs clean linkcheck

  test-py36-38:
    name: py${{ matrix.python-version }} dj${{ matrix.version_combinations.django }} cms${{ matrix.version_combinations.cms }}
    runs-on: ubuntu-latest
    needs: [pre-commit, docs]
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        version_combinations:
          [
            { 'django': 1.11, 'cms': 3.4 },
            { 'django': 1.11, 'cms': 3.5 },
            { 'django': 1.11, 'cms': 3.6 },
            { 'django': 1.11, 'cms': 3.7 },
            { 'django': 2.1, 'cms': 3.7 },
            { 'django': 2.1, 'cms': 3.6 },
            { 'django': 2.2, 'cms': 3.7 },
          ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm ci
          npm run publish
      - name: Start docker-compose
        run: |
          docker-compose up -d
          docker-compose ps
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install -U .
          pip install -U -r requirements_dev.txt
          pip install 'django==${{ matrix.version_combinations.django }}.*' 'django-cms==${{ matrix.version_combinations.cms }}.*'
      - name: Generate screenshot report
        if: matrix.version_combinations.django != 2.2
        run: |
          pip install -U 'django-classy-tags<2' 'django-sekizai<2'
      - name: Show installed packages
        run: pip freeze

      - name: Run tests django==${{ matrix.version_combinations.django }} && django-cms==${{ matrix.version_combinations.cms }}
        env:
          PYTEST_ARGS: '-vv --reruns 10'
        run: |
          coverage erase
          coverage run setup.py test
          coverage report
          coverage xml

      - name: Upload Screenshots Artifact on fail
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: test_screenshots

      - name: Generate screenshot report
        if: matrix.version_combinations.django == 2.2 && matrix.version_combinations.cms == 3.7 && matrix.python-version == 3.7 && (github.ref == 'refs/heads/master' || github.base_ref == 'master' )
        run: |
          python tests/utils/generate_screenshot_test_report.py
      - name: Percy Upload
        if: matrix.version_combinations.django == 2.2 && matrix.version_combinations.cms == 3.7 && matrix.python-version == 3.7 && (github.ref == 'refs/heads/master' || github.base_ref == 'master' )
        uses: percy/snapshot-action@v0.1.1
        with:
          build-directory: 'test_screenshots'
          flags: '-c .ci.percy.yml'
          verbose: true
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml

  test-py35:
    name: py3.5 dj${{ matrix.version_combinations.django }} cms${{ matrix.version_combinations.cms }}
    runs-on: ubuntu-latest
    needs: [pre-commit, docs]
    strategy:
      matrix:
        version_combinations:
          [
            { 'django': 1.11, 'cms': 3.4 },
            { 'django': 1.11, 'cms': 3.5 },
            { 'django': 1.11, 'cms': 3.6 },
            { 'django': 1.11, 'cms': 3.7 },
            { 'django': 2.1, 'cms': 3.6 },
            { 'django': 2.1, 'cms': 3.7 },
          ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm ci
          npm run publish
      - name: Start docker-compose
        run: |
          docker-compose up -d
          docker-compose ps
      - name: Set up Python 3.5
        uses: actions/setup-python@v2
        with:
          python-version: 3.5

      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install -U .
          pip install -U -r requirements_dev.txt
          pip install -U 'webdriver_manager==2.3.0'
          pip install 'django==${{ matrix.version_combinations.django }}.*' 'django-cms==${{ matrix.version_combinations.cms }}.*' 'django-classy-tags<2' 'django-sekizai<2'
      - name: Show installed packages
        run: pip freeze

      - name: Run tests django==${{ matrix.version_combinations.django }} && django-cms==${{ matrix.version_combinations.cms }}
        env:
          PYTEST_ARGS: '-vv --reruns 10'
        run: |
          coverage erase
          coverage run setup.py test
          coverage report
          coverage xml

      - name: Upload Screenshots Artifact on fail
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: screenshots
          path: test_screenshots
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml

  deploy:
    name: Upload new version to PyPi
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test-py36-38, test-py35]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Compile assets
        run: |
          npm ci
          npm run publish
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -U -r requirements_dev.txt
          pip install -U .
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
